# Generated by Django 5.1.7 on 2025-03-21 18:17

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CurrencyUnit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('symbol', models.CharField(max_length=10, unique=True)),
                ('measurement', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name': 'Игровая валюта',
                'verbose_name_plural': 'Игровые валюты',
            },
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('player_id', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'verbose_name': 'Игрок',
                'verbose_name_plural': 'Игроки',
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'verbose_name': 'Сервис',
                'verbose_name_plural': 'Сервисы',
            },
        ),
        migrations.CreateModel(
            name='CheckingAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.PositiveBigIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('currency_unit', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='currencies.currencyunit')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='checking_accounts', to='currencies.player')),
            ],
            options={
                'verbose_name': 'Счет пользователя',
                'verbose_name_plural': 'Счета пользователей',
            },
        ),
        migrations.CreateModel(
            name='ExchangeRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enabled_forward', models.BooleanField(default=False)),
                ('enabled_reverse', models.BooleanField(default=False)),
                ('forward_rate', models.PositiveIntegerField()),
                ('reverse_rate', models.PositiveIntegerField()),
                ('min_first_amount', models.PositiveIntegerField()),
                ('min_second_amount', models.PositiveIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('first_unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='first_exchanges', to='currencies.currencyunit')),
                ('second_unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='second_exchanges', to='currencies.currencyunit')),
            ],
            options={
                'verbose_name': 'Правило обмена валюты',
                'verbose_name_plural': 'Правила обмена валют',
            },
        ),
        migrations.CreateModel(
            name='ExchangeTransaction',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('description', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('CONFIRMED', 'Confirmed'), ('REJECTED', 'Rejected')], default='PENDING', max_length=10)),
                ('status_description', models.TextField(blank=True)),
                ('auto_reject_after', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('closed_at', models.DateTimeField(blank=True, null=True)),
                ('from_amount', models.IntegerField()),
                ('to_amount', models.IntegerField()),
                ('exchange_rule', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='currencies.exchangerule')),
                ('from_checking_account', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='from_exchange_transactions', to='currencies.checkingaccount')),
                ('to_checking_account', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='to_exchange_transactions', to='currencies.checkingaccount')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='currencies.service')),
            ],
            options={
                'verbose_name': 'Транзакция обмена',
                'verbose_name_plural': 'Транзакции обмена',
            },
        ),
        migrations.CreateModel(
            name='CurrencyTransaction',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('description', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('CONFIRMED', 'Confirmed'), ('REJECTED', 'Rejected')], default='PENDING', max_length=10)),
                ('status_description', models.TextField(blank=True)),
                ('auto_reject_after', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('closed_at', models.DateTimeField(blank=True, null=True)),
                ('amount', models.BigIntegerField()),
                ('checking_account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='currencies.checkingaccount')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='currencies.service')),
            ],
            options={
                'verbose_name': 'Транзакция получения/вычета',
                'verbose_name_plural': 'Транзакции получения/вычета',
            },
        ),
        migrations.CreateModel(
            name='TransferTransaction',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('description', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('CONFIRMED', 'Confirmed'), ('REJECTED', 'Rejected')], default='PENDING', max_length=10)),
                ('status_description', models.TextField(blank=True)),
                ('auto_reject_after', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('closed_at', models.DateTimeField(blank=True, null=True)),
                ('amount', models.PositiveBigIntegerField()),
                ('from_checking_account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='out_transfers', to='currencies.checkingaccount')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='currencies.service')),
                ('to_checking_account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='in_transfers', to='currencies.checkingaccount')),
            ],
            options={
                'verbose_name': 'Транзакция перевода',
                'verbose_name_plural': 'Транзакции перевода',
            },
        ),
        migrations.AddConstraint(
            model_name='exchangerule',
            constraint=models.UniqueConstraint(fields=('first_unit', 'second_unit'), name='unique_currency_unit_exchanges'),
        ),
        migrations.AddConstraint(
            model_name='checkingaccount',
            constraint=models.UniqueConstraint(fields=('player', 'currency_unit'), name='unique_user_currency'),
        ),
    ]
