
name: gaming-billing

services:
  nginx:
    image: nginx:alpine
    restart: always
    ports:
      - 80:80
    volumes:
      - static_value:/var/html/static
    group_add:
      - 110
    depends_on:
      - gaming-billing
    networks:
      - to-wan-network
    configs:
      - source: nginx
        target: /etc/nginx/conf.d/default.conf

  migrations:
    build: ../services/gaming_billing/
    command: ["./migrations.sh"]
    stop_signal: SIGINT
    depends_on:
      db:
        condition: service_healthy
    networks:
      - only-lan-network
    configs:
      - source: gaming-billing
        target: /app/config.toml

  tests:
    build: ../services/gaming_billing/
    command: ["python3", "manage.py", "test", "--no-input"]
    stop_signal: SIGINT
    depends_on:
      migrations:
        condition: service_completed_successfully
    networks:
      - only-lan-network
    configs:
      - source: gaming-billing
        target: /app/config.toml


  celery:
    build: ../services/gaming_billing/
    command: celery -A settings worker -l info -n celery-worker@%h
    develop:
      watch:
        - path: ../services/gaming_billing
          target: /app
          action: sync+restart
    depends_on:
      - migrations
      - rabbitmq
    restart: on-failure
    networks:
      - only-lan-network
    configs:
      - source: gaming-billing
        target: /app/config.toml

  gaming-billing:
    build: ../services/gaming_billing/
    command: "gunicorn settings.wsgi:application --bind 0:8000"
    ports:
      - "8000:8000"
      - "5678:5678"
    develop:
      watch:
        - path: ../services/gaming_billing
          target: /app
          action: sync
    stop_signal: SIGINT
    restart: always
    volumes:
      - static_value:/app/static
    group_add:
      - 110
    depends_on:
      tests:
        condition: service_completed_successfully
    networks:
      - only-lan-network
      - to-wan-network
    configs:
      - source: gaming-billing
        target: /app/config.toml

  celery-beats:
    build: ../services/gaming_billing/
    command: celery -A settings beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    depends_on:
      - tests
      - rabbitmq
    restart: on-failure
    networks:
      - only-lan-network
    configs:
      - source: gaming-billing
        target: /app/config.toml

  db:
    image: postgres:15.4-bookworm
    restart: always
    volumes:
      - postgres_value:/var/lib/postgresql/data/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - only-lan-network
    env_file:
      - ./configs/postgres/postgres.env

  rabbitmq:
    image: "rabbitmq:alpine"
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3
    networks:
      - only-lan-network

configs:
  gaming-billing:
    file: ./configs/gaming_billing/config.toml
  nginx:
    file: ./configs/nginx/default.conf

volumes:
  postgres_value:
  static_value:

networks:
  to-wan-network:
  only-lan-network:
