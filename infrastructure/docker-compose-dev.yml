
name: gaming-billing-dev

services:

  gaming-billing-migrations:
    build: ../gaming_billing_service/
    command: ["./migrations.sh"]
    stop_signal: SIGINT
    depends_on:
      db:
        condition: service_healthy
    networks:
      - only-lan-network
    configs:
      - source: gaming-billing
        target: /app/config.toml

  gaming-billing-tests:
    build: ../gaming_billing_service/
    command: ["python3", "manage.py", "test", "--no-input"]
    stop_signal: SIGINT
    depends_on:
      gaming-billing-migrations:
        condition: service_completed_successfully
    networks:
      - only-lan-network
    configs:
      - source: gaming-billing
        target: /app/config.toml

  gaming-billing-celery:
    build: ../gaming_billing_service/
    command: celery -A settings worker -l info -n gaming-billing-celery-worker@%h
    depends_on:
      - gaming-billing-migrations
      - rabbitmq
    restart: on-failure
    networks:
      - only-lan-network
    configs:
      - source: gaming-billing
        target: /app/config.toml

  gaming-billing:
    build: ../gaming_billing_service/
    command: "sh -c 'pip3 install debugpy -t /tmp && python3 /tmp/debugpy --wait-for-client --listen 0.0.0.0:5678 manage.py runserver 0.0.0.0:8000'"
    ports:
      - "8000:8000"
      - "5678:5678"
    develop:
      watch:
        - path: ../gaming_billing_service
          target: /app
          action: sync
    stop_signal: SIGINT
    restart: always
    volumes:
      - static_value:/app/static
    group_add:
      - 110
    depends_on:
      gaming-billing-tests:
        condition: service_completed_successfully
    networks:
      - only-lan-network
      - to-wan-network
    configs:
      - source: gaming-billing
        target: /app/config.toml

  gaming-billing-celery-beats:
    build: ../gaming_billing_service/
    command: celery -A settings beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    depends_on:
      - gaming-billing-tests
      - rabbitmq
    restart: on-failure
    networks:
      - only-lan-network
    configs:
      - source: gaming-billing
        target: /app/config.toml

  db:
    image: postgres:15.4-bookworm
    restart: always
    volumes:
      - postgres_value:/var/lib/postgresql/data/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - only-lan-network
    env_file:
      - ./configs/postgres/postgres.env

  rabbitmq:
    image: "rabbitmq:alpine"
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3
    networks:
      - only-lan-network

volumes:
  postgres_value:
  static_value:

networks:
  to-wan-network:
  only-lan-network:

configs:
  gaming-billing:
    file: ./configs/gaming_billing/config.toml
  nginx:
    file: ./configs/nginx/default.conf
