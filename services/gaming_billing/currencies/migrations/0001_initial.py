# Generated by Django 5.2 on 2025-05-03 12:26

import django.core.validators
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CheckingAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=4, max_digits=13, verbose_name='Сумма средств')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
            ],
            options={
                'verbose_name': 'Счет держателя',
                'verbose_name_plural': 'Счета держателей',
            },
        ),
        migrations.CreateModel(
            name='CurrencyService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.SlugField(max_length=100, unique=True, verbose_name='Название')),
                ('enabled', models.BooleanField(default=False, verbose_name='Включено')),
                ('permissions', models.JSONField(default=dict, verbose_name='Разрешения')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
            ],
            options={
                'verbose_name': 'Сервис',
                'verbose_name_plural': 'Сервисы',
            },
        ),
        migrations.CreateModel(
            name='CurrencyUnit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('symbol', models.CharField(max_length=30, unique=True, verbose_name='Символ')),
                ('measurement', models.CharField(max_length=100, verbose_name='Название единицы измерения')),
                ('precision', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(4)], verbose_name='Количество знаков после запятой')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
            ],
            options={
                'verbose_name': 'Игровая валюта',
                'verbose_name_plural': 'Игровые валюты',
            },
        ),
        migrations.CreateModel(
            name='Holder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enabled', models.BooleanField(verbose_name='Включен')),
                ('holder_id', models.CharField(max_length=255, unique=True, verbose_name='Уникальный ID')),
                ('info', models.JSONField(blank=True, default=dict, null=True, verbose_name='Дополнительная информация')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
            ],
            options={
                'verbose_name': 'Держатель',
                'verbose_name_plural': 'Держатели',
            },
        ),
        migrations.CreateModel(
            name='HolderType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.SlugField(max_length=100, unique=True, verbose_name='Название')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
            ],
            options={
                'verbose_name': 'Тип держателя',
                'verbose_name_plural': 'Типы держателей',
            },
        ),
        migrations.CreateModel(
            name='AdjustmentTransaction',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='Уникальный ID (uuid)')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('CONFIRMED', 'Confirmed'), ('REJECTED', 'Rejected')], default='PENDING', max_length=10, verbose_name='Статус')),
                ('status_description', models.TextField(blank=True, verbose_name='Описание статуса')),
                ('auto_reject_after', models.DateTimeField(verbose_name='Дата автоматического отклонения')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('closed_at', models.DateTimeField(blank=True, null=True, verbose_name='Дата завершения')),
                ('amount', models.DecimalField(decimal_places=4, max_digits=13, verbose_name='Сумма')),
                ('checking_account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='currencies.checkingaccount', verbose_name='Счёт')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='currencies.currencyservice', verbose_name='Сервис')),
            ],
            options={
                'verbose_name': 'Транзакция получения/вычета',
                'verbose_name_plural': 'Транзакции получения/вычета',
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='checkingaccount',
            name='currency_unit',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='currencies.currencyunit', verbose_name='Игровая валюта'),
        ),
        migrations.CreateModel(
            name='ExchangeRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enabled_forward', models.BooleanField(default=False, verbose_name='Включен ли прямой обмен (1 -> 2)')),
                ('enabled_reverse', models.BooleanField(default=False, verbose_name='Включен ли обратный обмен (2 -> 1)')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Название')),
                ('forward_rate', models.DecimalField(decimal_places=4, help_text='За какое количество валюты 1 дают одну единицу валюты 2', max_digits=13, verbose_name='Прямой курс')),
                ('reverse_rate', models.DecimalField(decimal_places=4, help_text='Какое количество валюты 1 дадут за одну единицу валюты 2', max_digits=13, verbose_name='Обратный курс')),
                ('min_first_amount', models.DecimalField(decimal_places=4, max_digits=13, verbose_name='Минимальное количество валюты 1')),
                ('min_second_amount', models.DecimalField(decimal_places=4, max_digits=13, verbose_name='Минимальное количество валюты 2')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('first_unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='first_exchanges', to='currencies.currencyunit', verbose_name='Игровая валюта 1')),
                ('second_unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='second_exchanges', to='currencies.currencyunit', verbose_name='Игровая валюта 2')),
            ],
            options={
                'verbose_name': 'Правило обмена валюты',
                'verbose_name_plural': 'Правила обмена валют',
            },
        ),
        migrations.CreateModel(
            name='ExchangeTransaction',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='Уникальный ID (uuid)')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('CONFIRMED', 'Confirmed'), ('REJECTED', 'Rejected')], default='PENDING', max_length=10, verbose_name='Статус')),
                ('status_description', models.TextField(blank=True, verbose_name='Описание статуса')),
                ('auto_reject_after', models.DateTimeField(verbose_name='Дата автоматического отклонения')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('closed_at', models.DateTimeField(blank=True, null=True, verbose_name='Дата завершения')),
                ('from_amount', models.DecimalField(decimal_places=4, max_digits=13, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Сумма из источника')),
                ('to_amount', models.DecimalField(decimal_places=4, max_digits=13, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Сумма получения')),
                ('exchange_rule', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='currencies.exchangerule', verbose_name='Правило обмена')),
                ('from_checking_account', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='from_exchange_transactions', to='currencies.checkingaccount', verbose_name='Счёт источник')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='currencies.currencyservice', verbose_name='Сервис')),
                ('to_checking_account', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='to_exchange_transactions', to='currencies.checkingaccount', verbose_name='Счёт получатель')),
            ],
            options={
                'verbose_name': 'Транзакция обмена',
                'verbose_name_plural': 'Транзакции обмена',
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='checkingaccount',
            name='holder',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='checking_accounts', to='currencies.holder', verbose_name='Держатель'),
        ),
        migrations.AddField(
            model_name='holder',
            name='holder_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='holders', to='currencies.holdertype', verbose_name='Тип держателя'),
        ),
        migrations.CreateModel(
            name='TransferRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enabled', models.BooleanField(default=False, verbose_name='Включено')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Название')),
                ('fee_percent', models.DecimalField(decimal_places=1, max_digits=6, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Комиссия за обмен')),
                ('min_from_amount', models.DecimalField(decimal_places=4, max_digits=13, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Минимальное количество изначально отправляемой валюты')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='currencies.currencyunit', verbose_name='Игровая валюта')),
            ],
            options={
                'verbose_name': 'Правило перевода валюты',
                'verbose_name_plural': 'Правила перевода валют',
            },
        ),
        migrations.CreateModel(
            name='TransferTransaction',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='Уникальный ID (uuid)')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('CONFIRMED', 'Confirmed'), ('REJECTED', 'Rejected')], default='PENDING', max_length=10, verbose_name='Статус')),
                ('status_description', models.TextField(blank=True, verbose_name='Описание статуса')),
                ('auto_reject_after', models.DateTimeField(verbose_name='Дата автоматического отклонения')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('closed_at', models.DateTimeField(blank=True, null=True, verbose_name='Дата завершения')),
                ('from_amount', models.DecimalField(decimal_places=4, max_digits=13, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Сумма снятия')),
                ('to_amount', models.DecimalField(decimal_places=4, max_digits=13, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Сумма получения')),
                ('from_checking_account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='out_transfers', to='currencies.checkingaccount', verbose_name='Счёт отправителя')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='currencies.currencyservice', verbose_name='Сервис')),
                ('to_checking_account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='in_transfers', to='currencies.checkingaccount', verbose_name='Счёт получателя')),
                ('transfer_rule', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='currencies.transferrule', verbose_name='Правило перевода')),
            ],
            options={
                'verbose_name': 'Транзакция перевода',
                'verbose_name_plural': 'Транзакции перевода',
                'abstract': False,
            },
        ),
        migrations.AddConstraint(
            model_name='checkingaccount',
            constraint=models.UniqueConstraint(fields=('holder', 'currency_unit'), name='unique_holder_currency'),
        ),
    ]
